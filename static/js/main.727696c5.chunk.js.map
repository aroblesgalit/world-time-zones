{"version":3,"sources":["components/Item/index.js","App.js","reportWebVitals.js","index.js"],"names":["Item","item","onDelete","useState","value","split","join","name","moment","tz","format","time","setTime","useEffect","isMounted","setInterval","className","onClick","App","JSON","parse","localStorage","getItem","timezones","setTimezones","fetch","then","res","json","tempTimezones","i","length","push","catch","err","console","log","items","setItems","id","onChange","e","preventDefault","target","includes","prevState","setItem","stringify","newTimezones","filter","timezone","addTimeZone","map","currentItems","splice","sort","a","b","deleteTimeZone","window","location","reload","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kSAkCeA,EA9BF,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAElB,EAAgBC,mBAASF,GAAlBG,EAAP,oBACA,EAAeD,oBAAS,WAEpB,OADeC,EAAMC,MAAM,KACXC,KAAK,QAFlBC,EAAP,oBAIA,EAAwBJ,oBAAS,WAC7B,OAAOK,MAASC,GAAGR,GAAMS,OAAO,kBADpC,mBAAOC,EAAP,KAAaC,EAAb,KAcA,OAVAC,qBAAU,WACN,IAAIC,GAAY,EAMhB,OALAC,aAAY,WACJD,GAAWF,GAAQ,WACnB,OAAOJ,MAASC,GAAGR,GAAMS,OAAO,oBAErC,KACI,WAAQI,GAAY,KAC5B,IAGC,qBAAIE,UAAU,OAAd,UACI,6BAAI,4BAAIT,MACR,6BAAI,4BAAII,MACR,oBAAIM,QAASf,EAAb,SAAuB,+CCuEpBgB,MAhGf,WAEE,MAAkCf,mBAASgB,KAAKC,MAAMC,aAAaC,QAAQ,eAAiB,IAA5F,mBAAOC,EAAP,KAAkBC,EAAlB,KAQAX,qBAAU,WACRY,MAAM,yCACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GAEJ,IADA,IAAME,EAAgB,GACbC,EAAI,EAAGA,EAAIH,EAAII,OAAQD,IAC9BD,EAAcG,KAAK,CACjB5B,MAAOuB,EAAIG,GACXvB,KAAMoB,EAAIG,GAAGzB,MAAM,KAAKC,KAAK,OAGjC,OAAOuB,KAERH,MAAK,SAAAC,GAAG,OAAIH,EAAaG,MACzBM,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAC3B,IAEH,MAA0B/B,mBAASgB,KAAKC,MAAMC,aAAaC,QAAQ,WAAa,IAAhF,mBAAOe,EAAP,KAAcC,EAAd,KAwCA,OACE,+BACE,gCACE,kDACA,yBAAQ/B,KAAK,aAAagC,GAAG,aAAaC,SAAU,SAACC,GAAD,OA1C1D,SAAqBA,GACnBA,EAAEC,iBAEF,IAAMzC,EAAOwC,EAAEE,OAAOvC,MACtB,IAAIiC,EAAMO,SAAS3C,GAAnB,CAGAqC,GAAS,SAAAO,GAAS,4BAAQA,GAAR,CAAmB5C,OAErCoB,aAAayB,QAAQ,QAAS3B,KAAK4B,UAAL,sBAAmBV,GAAnB,CAA0BpC,MAGxD,IAAM+C,EAAe,YAAIzB,GAAW0B,QAAO,SAAAC,GAAQ,OAAIA,EAAS9C,QAAUH,KAC1EuB,EAAawB,GAEb3B,aAAayB,QAAQ,YAAa3B,KAAK4B,UAAUC,KA2BcG,CAAYV,IAAvE,UACE,wBAAQrC,MAAM,GAAd,uCAEEmB,EAAU6B,KAAI,SAACF,EAAUpB,GAAX,OAAiB,wBAAuC1B,MAAO8C,EAAS9C,MAAvD,SAA+D8C,EAAS3C,MAAxE,UAAgBuB,EAAhB,YAAqBoB,EAAS9C,cAGjE,uBAAOY,UAAU,OAAjB,SACE,gCAEIqB,GAASA,EAAMe,KAAI,SAACnD,EAAM6B,GACxB,OAAO,cAAC,EAAD,CAA2B7B,KAAMA,EAAMC,SAAU,SAACuC,GAAD,OAlCtE,SAAwBA,EAAGX,GACzBW,EAAEC,iBACF,IAAMW,EAAY,YAAOhB,GACnBpC,EAAOoD,EAAaC,OAAOxB,EAAG,GACpCQ,EAASe,GAEThC,aAAayB,QAAQ,QAAS3B,KAAK4B,UAAUM,IAG7C,IAAML,EAAY,YAAOzB,GACzByB,EAAahB,KAAK,CAChB5B,MAAOH,EAAKK,OACZC,KAAMN,EAAKK,OAAOD,MAAM,KAAKC,KAAK,OAEpC0C,EAAaO,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEpD,MAAQqD,EAAErD,MAAQ,GAAK,KACrDoB,EAAawB,GAEb3B,aAAayB,QAAQ,YAAa3B,KAAK4B,UAAUC,IAiB0BU,CAAejB,EAAGX,KAA1E,UAAcA,EAAd,YAAmB7B,WAMhCoC,EAAMN,OAAS,GACb,qBAAKQ,GAAG,UAAUtB,QAAS,kBAAM0C,OAAOC,SAASC,UAAjD,+BChFGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtC,MAAK,YAAkD,IAA/CuC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.727696c5.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport moment from 'moment-timezone';\r\nimport './item.css';\r\n\r\nconst Item = ({ item, onDelete }) => {\r\n\r\n    const [value] = useState(item);\r\n    const [name] = useState(() => {\r\n        let valueArr = value.split('_');\r\n        return valueArr.join(' ');\r\n    });\r\n    const [time, setTime] = useState(() => {\r\n        return moment().tz(item).format('h:mm:ss a z');\r\n    });\r\n\r\n    useEffect(() => {\r\n        let isMounted = true; // For the Warning: \"Can't perform a React state update on an unmounted component\"\r\n        setInterval(() => {\r\n            if (isMounted) setTime(() => {\r\n                return moment().tz(item).format('h:mm:ss a z');\r\n            });\r\n        }, 1000)\r\n        return () => { isMounted = false };\r\n    }, [])\r\n\r\n    return (\r\n        <tr className='item'>\r\n            <td><p>{name}</p></td>\r\n            <td><p>{time}</p></td>\r\n            <td onClick={onDelete}><div>&#10006;</div></td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default Item;","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Item from './components/Item';\n\nfunction App() {\n\n  const [timezones, setTimezones] = useState(JSON.parse(localStorage.getItem('timezones')) || [\n    // { value: 'America/Los_Angeles', name: 'America/Los Angeles' },\n    // { value: 'America/New_York', name: 'America/New York' },\n    // { value: 'Asia/Tokyo', name: 'Asia/Tokyo' },\n    // { value: 'Australia/Sydney', name: 'Australia/Sydney' },\n    // { value: 'Europe/London', name: 'Europe/London' },\n  ]);\n\n  useEffect(() => {\n    fetch('https://worldtimeapi.org/api/timezone')\n      .then(res => res.json())\n      .then(res => {\n        const tempTimezones = [];\n        for (let i = 0; i < res.length; i++) {\n          tempTimezones.push({\n            value: res[i],\n            name: res[i].split('_').join(' ')\n          })\n        }\n        return tempTimezones;\n      })\n      .then(res => setTimezones(res))\n      .catch(err => console.log(err))\n  }, [])\n\n  const [items, setItems] = useState(JSON.parse(localStorage.getItem('items')) || []);\n\n  function addTimeZone(e) {\n    e.preventDefault();\n\n    const item = e.target.value;\n    if (items.includes(item)) return; // Return if time zone is already on list\n\n    // Add to items array\n    setItems(prevState => [...prevState, item])\n    // Store items in localstorage\n    localStorage.setItem('items', JSON.stringify([...items, item]));\n\n    // Remove item from timezones array\n    const newTimezones = [...timezones].filter(timezone => timezone.value !== item);\n    setTimezones(newTimezones);\n    // Store timezones in localstorage\n    localStorage.setItem('timezones', JSON.stringify(newTimezones));\n  }\n\n  function deleteTimeZone(e, i) {\n    e.preventDefault();\n    const currentItems = [...items];\n    const item = currentItems.splice(i, 1);\n    setItems(currentItems);\n    // Store items in localstorage\n    localStorage.setItem('items', JSON.stringify(currentItems));\n\n    // Add item back into timezones array\n    const newTimezones = [...timezones];\n    newTimezones.push({\n      value: item.join(),\n      name: item.join().split('_').join(' ')\n    })\n    newTimezones.sort((a, b) => a.value > b.value ? 1 : -1);\n    setTimezones(newTimezones);\n    // Store timezones in localstorage\n    localStorage.setItem('timezones', JSON.stringify(newTimezones));\n  }\n\n  return (\n    <main>\n      <div>\n        <h1>World Time Zones</h1>\n        <select name='time-zones' id='time-zones' onChange={(e) => addTimeZone(e)}>\n          <option value=''>Select a time zone to add</option>\n          {\n            timezones.map((timezone, i) => <option key={`${i}-${timezone.value}`} value={timezone.value}>{timezone.name}</option>)\n          }\n        </select>\n        <table className='list'>\n          <tbody>\n            {\n              items && items.map((item, i) => {\n                return <Item key={`${i}-${item}`} item={item} onDelete={(e) => deleteTimeZone(e, i)} />\n              })\n            }\n          </tbody>\n        </table>\n        {\n          items.length > 1 && (\n            <div id='refresh' onClick={() => window.location.reload()}>&#8635; Sync</div>\n          )\n        }\n      </div>\n    </main>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}